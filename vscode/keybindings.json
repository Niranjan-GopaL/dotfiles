[
  // Place your key bindings in this file to override the defaults
  
  //   how to open this file (keybindings.jaon) , settings
  {
    "key": "ctrl+k ctrl+l",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },

  {
    "key": "ctrl+o ctrl+p",
    "command": "workbench.action.openApplicationSettingsJson"
  },


// THIS IS REALLY USEFUL for webDev lol
  {
    "key": "ctrl+n",
    "command": "extension.advancedNewFile"
  },

  {
    "key": "ctrl+shift+f ctrl+shift+f",
    "command": "fileutils.newFolder"
  },


//   FOLDING KEYBINDINGS

{
    "key": "ctrl+k ctrl+-",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
},

{
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
},


{
    "key": "shift+alt+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "shift+alt+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
},



//   changing tabs easily --------------------------------------------------------------------------------------------------
{
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
// --------------------------------------------------------------------------------------------------------------------



// transform upper_Case, lower_Case, snake_case, title_case
{
    "key": "ctrl+shift+alt+u ctrl+shift+alt+u",
    "command": "editor.action.transformToUppercase"
},
{
    "key": "ctrl+shift+alt+l ctrl+shift+alt+l",
    "command": "editor.action.transformToLowercase"
},
{
    "key": "ctrl+shift+alt+s ctrl+shift+alt+s",
    "command": "editor.action.transformToSnakecase"
},
{
    "key": "ctrl+shift+alt+t ctrl+shift+alt+t",
    "command": "editor.action.transformToTitlecase"
},


  // toggling visibility of  status_bar, minimap , activity_bar
  {
    "key": "ctrl+shift+z",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "ctrl+shift+oem_2",
    "command": "editor.action.toggleMinimap"
  },
  {
    "key": "ctrl+shift+' ctrl+shift+/",
    "command": "workbench.action.toggleActivityBarVisibility"
  },


//   ABSOLUTELY COOL STUFF : Courtesy of TOGGLE - THE EXTENSION --------------------------------------------------------------------------------
{
    "key": "F3",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
        "id": "indentation_guide",
        "value": [
              {
                "editor.guides.indentation": true
              },
              {
                "editor.guides.indentation": false
              }
        ]
    }
  },

  {
    "key": "ctrl+alt+x",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
        "id": "inlay_hints",
        "value": [
              {
                "editor.inlayHints.enabled": "on"
              },
              {
                "editor.inlayHints.enabled": "offUnlessPressed"
              }
        ]
    }
  },

  {
    "key": "ctrl+alt+shift+x",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
        "id": "inlay_hints",
        "value": [
              {
                "codeium.enableCodeLens": true
              },
              {
                "codeium.enableCodeLens": false
              }
        ]
    }
  },

//  ----------------------------------------------------------------------------------------------------------

    //   -------- EXTENSION KEYBINDINGS ----------
  {
    "key": "ctrl+shift+alt+m",
    "command": "glassit.increase"
  },
  {
    "key": "ctrl+shift+alt+n",
    "command": "glassit.decrease"
  },

  {
    "key": "shift+alt+l shift+alt+l",
    "command": "errorLens.toggle"
  },


  {
    "key": "ctrl+q",
    "command": "code-runner.run"
  },

  {
    "key": "ctrl+alt+z",
    "command": "toggleVim"
  },

{
    "key": "ctrl+g",
    "command": "workbench.action.gotoLine"
  },

  {
    "key": "ctrl+alt+shift+j",
    "command": "workbench.action.navigateLeft"
  },

    // no ide why this does not work   
  {
    "key": "ctrl+alt+shif+k",
    "command": "workbench.action.navigateRight"
  },
    


//   AHK -----------------------------------------------------------------------------------------------------------------

  {
    "key": "ctrl+shift+r ctrl+shift+r",
    "command": "run.ahk",
    "when": "editorLangId == 'ahk'"
  },
  {
    "key": "ctrl+f9",
    "command": "-run.ahk",
    "when": "editorLangId == 'ahk'"
  },
  {
    "key": "ctrl+shift+r ctrl+shift+r",
    "command": "ahk2.run",
    "when": "!editorHasSelection && editorLangId == 'ahk2' && resourceScheme == 'file'"
  },
  {
    "key": "ctrl+f5",
    "command": "-ahk2.run",
    "when": "!editorHasSelection && editorLangId == 'ahk2' && resourceScheme == 'file'"
  },
  {
    "key": "ctrl+shift+c ctrl+shift+c",
    "command": "ahk2.compile",
    "when": "editorLangId == 'ahk2' && resourceScheme == 'file'"
  },
  {
    "key": "ctrl+shift+f5",
    "command": "-ahk2.compile",
    "when": "editorLangId == 'ahk2' && resourceScheme == 'file'"
  },
  {
    "key": "ctrl+shift+s ctrl+shift+s",
    "command": "ahk2.stop",
    "when": "ahk2:isRunning && editorLangId == 'ahk2'"
  },
  {
    "key": "ctrl+f6",
    "command": "-ahk2.stop",
    "when": "ahk2:isRunning && editorLangId == 'ahk2'"
  },
  


// --------------------------------------------------------------------------------------------------------------------------


  {
    "key": "ctrl+shift+alt+1",
    "command": "vscode-macros.user1"
  },
  {
    "key": "ctrl+shift+alt+2",
    "command": "vscode-macros.user2"
  },
  {
    "key": "ctrl+shift+alt+3",
    "command": "vscode-macros.user3"
  },




  {
    "key": "ctrl+shift+l",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  


  // When I changed the a keybinding and then later changed it back this is what happened
  // Notice the minus sign

  // {
  //   "key": "pagedown",
  //   "command": "editor.action.pageDownHover",
  //   "when": "editorHoverFocused"
  // },
  // {
  //   "key": "pagedown",
  //   "command": "-editor.action.pageDownHover",
  //   "when": "editorHoverFocused"
  // },
  // {
  //   "key": "pageup",
  //   "command": "editor.action.pageUpHover",
  //   "when": "editorHoverFocused"
  // },
  // {
  //   "key": "pageup",
  //   "command": "-editor.action.pageUpHover",
  //   "when": "editorHoverFocused"
  // },



{
    "key": "ctrl+shift+backspace",
    "command": "-search.searchEditor.action.deleteFileResults",
    "when": "inSearchEditor"
},

{
    "key": "delete",
    "command": "-deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
},
{
    "key": "ctrl+enter",
    "command": "-explorer.openToSide",
    "when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
},
{
    "key": "ctrl+enter",
    "command": "-search.action.openResultToSide",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
},
{
    "key": "ctrl+w ctrl+w",
    "command": "-workbench.action.focusFirstEditorGroup",
    "when": "!editorTextFocus && !filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus"
},
{
    "key": "ctrl+w ctrl+w",
    "command": "-workbench.action.focusNextGroup",
    "when": "!editorTextFocus && !filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus"
},
{
    "key": "ctrl+w up",
    "command": "-workbench.action.navigateUp",
    "when": "!editorTextFocus && !terminalFocus"
},
{
    "key": "ctrl+w down",
    "command": "-workbench.action.navigateDown",
    "when": "!editorTextFocus && !terminalFocus"
},
{
    "key": "ctrl+w j",
    "command": "-workbench.action.navigateDown",
    "when": "!editorTextFocus && !terminalFocus"
},
{
    "key": "ctrl+w left",
    "command": "-workbench.action.navigateLeft",
    "when": "!editorTextFocus && !terminalFocus"
},
{
    "key": "ctrl+w right",
    "command": "-workbench.action.navigateRight",
    "when": "!editorTextFocus && !terminalFocus"
},
{
    "key": "ctrl+w q",
    "command": "-workbench.action.closeActiveEditor",
    "when": "!editorTextFocus && !filesExplorerFocus && !searchViewletFocus && !terminalFocus"
},
{
    "key": "ctrl+w k",
    "command": "-workbench.action.navigateUp",
    "when": "!editorTextFocus && !terminalFocus"
},
{
    "key": "ctrl+w h",
    "command": "-workbench.action.navigateLeft",
    "when": "!editorTextFocus && !terminalFocus"
},
{
    "key": "ctrl+w l",
    "command": "-workbench.action.navigateRight",
    "when": "!editorTextFocus && !terminalFocus"
},
{
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
},
{
    "key": "ctrl+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
},
{
    "key": "ctrl+r",
    "command": "-extension.variable",
    "when": "editorTextFocus"
},
{
    "key": "ctrl+r",
    "command": "-extension.vim_ctrl+r",
    "when": "editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"
},
{
    "key": "ctrl+right",
    "command": "-extension.vim_ctrl+right",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
},
{
    "key": "ctrl+r",
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
},
{
    "key": "ctrl+shift+r",
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
},
{
    "key": "shift+alt+m shift+alt+m",
    "command": "editor.action.transformToCamelcase"
},
{
    "key": "ctrl+shift+g g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
},
{
    "key": "ctrl+oem_3",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
},
{
    "key": "ctrl+shift+[",
    "command": "-notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
},
{
    "key": "ctrl+shift+[",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
},
{
    "key": "left",
    "command": "-notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
},




{
    "key": "shift+alt+r",
    "command": "-remote-wsl.revealInExplorer",
    "when": "editorFocus && remoteName == 'wsl'"
},
{
    "key": "shift+alt+r shift+alt+r",
    "command": "fileutils.renameFile"
},

{
    "key": "ctrl+shift+alt+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
},
{
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
},
{
    "key": "ctrl+f",
    "command": "-repl.action.filter",
    "when": "inDebugRepl && textInputFocus"
},

]