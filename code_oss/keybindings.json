// Place your key bindings in this file to override the defaults
[
  // Place your key bindings in this file to override the defaults
  //   how to open this file (keybindings.jaon) , settings
  {
    "key": "ctrl+k ctrl+l",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "ctrl+o ctrl+p",
    "command": "workbench.action.openApplicationSettingsJson"
  },
  // THIS IS REALLY USEFUL for webDev lol
  {
    "key": "ctrl+n",
    "command": "extension.advancedNewFile"
  },
  {
    "key": "ctrl+shift+f ctrl+shift+f",
    "command": "fileutils.newFolder"
  },
  //   FOLDING KEYBINDINGS
  {
    "key": "ctrl+k ctrl+-",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "shift+alt+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "shift+alt+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },



//   changing tabs easily --------------------------------------------------------------------------------------------------
  // sought of redundant since H / L are for changing tabs now
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },

    // Zoom in and out 
  {
    "key": "ctrl+shift+alt+j",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+shift+alt+k",
    "command": "editor.action.fontZoomOut"
  },


  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
// ------------------------------------------------------------------------------------------------



// transform upper_Case, lower_Case, snake_case, title_case
{
    "key": "ctrl+shift+alt+u ctrl+shift+alt+u",
    "command": "editor.action.transformToUppercase"
},
{
    "key": "ctrl+shift+alt+l ctrl+shift+alt+l",
    "command": "editor.action.transformToLowercase"
},
{
    "key": "ctrl+shift+alt+s ctrl+shift+alt+s",
    "command": "editor.action.transformToSnakecase"
},
{
    "key": "ctrl+shift+alt+t ctrl+shift+alt+t",
    "command": "editor.action.transformToTitlecase"
},
{
  "key": "shift+alt+m shift+alt+m",
  "command": "editor.action.transformToCamelcase"
},

  // toggling visibility of  status_bar, minimap , activity_bar
  {
    "key": "ctrl+shift+z",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "ctrl+shift+oem_2",
    "command": "editor.action.toggleMinimap"
  },
  {
    "key": "ctrl+shift+' ctrl+shift+/",
    "command": "workbench.action.toggleActivityBarVisibility"
  },



//  ----------------------------------------------------------------------------------------------------------

//   -------- EXTENSION KEYBINDINGS ----------
{
  "key": "ctrl+shift+alt+m",
  "command": "glassit.increase"
},
{
  "key": "ctrl+shift+alt+n",
  "command": "glassit.decrease"
},

{
  "key": "shift+alt+l shift+alt+l",
  "command": "errorLens.toggle"
},


// ----------------- VIM -----------------------

// while in vim, to enable indentation using tabs and shift tabs

{
  "key": "tab",
  "command": "tab",
  "when": "editorTextFocus && !editorTabMovesFocus"
},
{
  "key": "shift+tab",
  "command": "outdent",
  "when": "editorTextFocus && !editorTabMovesFocus"
},

  // Traverse VSCode IntelliSense suggestions with vim keybindings.
{
  "key": "ctrl+j",
  "command": "selectNextSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
  "key": "ctrl+k",
  "command": "selectPrevSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
// QuickOpenNavigation is the one you see with Ctrl+p
{
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
},
{
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
},
// ctrl +shift + p is quickOpen
{
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
},
{
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
},

/*
        a - New file
        f - New folder
        r - Rename item
        x - Cut item
        y - Copy item
        p - Paste item
*/
{
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
},
{
    "key": "f",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
},
{
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
},
{
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
},
{
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
},
{
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
},




{
  "key": "h",
  "command": "editor.action.scrollLeftHover",
  "when": "editorHoverFocused"
},
{
  "key": "j",
  "command": "editor.action.scrollDownHover",
  "when": "editorHoverFocused"
},
{
  "key": "k",
  "command": "editor.action.scrollUpHover",
  "when": "editorHoverFocused"
},
{
  "key": "l",
  "command": "editor.action.scrollRightHover",
  "when": "editorHoverFocused"
},



{
  "key": "ctrl+alt+z",
  "command": "toggleVim"
},




//  ----------------------------------------------------------------------------------------------------------

// Only these are needed in order to have 
// Add Cursor up/down + Copy Line up/down in VimBindings

  {
    "key": "shift+alt+k",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+j",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  
  {
    "key": "ctrl+shift+j",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+k",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },


  // Miscellaneous

  // mapping ctlr+t to have the fn that was supposed to be of ctrl+j
  {
    "key": "ctrl+t",
    "command": "workbench.action.togglePanel"
  },

  // Find all occurances of somthing in entire workspace ; Include, Exclde files with regex
  {
    "key": "shift+alt+f shift+alt+f",
    "command": "workbench.action.findInFiles"
  },


  // Earlier Ctrl+d ; Go to the next occurance of the selection ; 
  // NOTE : on pressing ctrl+Q YOU WILL BE IN `VISUAL MODE` 
  //        --> JUST PRESS `v` AND YOU WILL BE BACKE TO BE IN NORMAL MODE , 
  //        --> ( or press `I`) to go to insert mode DIRECTLY but most of the times you would wanna be in normal mode
  {
    "key": "ctrl+q",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },

  
]