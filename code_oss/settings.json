{
    "workbench.colorTheme": "Nebula Pandas Theme",
    "window.menuBarVisibility": "toggle",
    "editor.fontSize": 15,
    "editor.scrollbar.verticalScrollbarSize": 0,
    "security.workspace.trust.untrustedFiles": "newWindow",
    "security.workspace.trust.startupPrompt": "never",
    "security.workspace.trust.enabled": false,

    // My fonts
    "editor.fontFamily": "'Maple Mono','Monaspace Radon','Monaspace Krypton','Monaspace Neon','CaskaydiaCove Nerd Font','JetBrainsMono Nerd Font Propo','Fira Code', 'monospace', monospace",
    "editor.fontLigatures": "'calt', 'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08', 'liga'",

    "extensions.autoUpdate": "onlySelectedExtensions",
    "terminal.external.linuxExec": "kitty",
    "terminal.explorerKind": "both",
    "terminal.sourceControlRepositoriesKind": "both",
    "telemetry.telemetryLevel": "off",
    "editor.mouseWheelZoom": true,
    "errorLens.enabled": true,
    "files.autoSave": "afterDelay",

    // vim settings
    "vim.leader": "<space>",
    "vim.useSystemClipboard": true,
    "vim.smartRelativeLine": true,
    "editor.cursorSurroundingLines": 14,
    
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.color": "#2ff702",
    "vim.highlightedyank.duration": 450,



    // these are the symbols used as seperators, you  can remove - 
    // so that className=`w-24 h-24 rounded-full mx-auto` ; rounded-full w-24 is a single word
    "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?",



    "vim.insertModeKeyBindings": [
      {
        "before": ["j", "k"],
        "after": ["<Esc>", "l"]
      }
    ],

    "vim.normalModeKeyBindings": [

            // go to beginning and end of a line
            // to go to end of line you can also do f`last char`
            // ( NOTE : % goes to matching brackets )

            // {
            //     "before":["1"],
            //     "after":  ["0"]
            // },
            // {
            //     "before":["2"],
            //     "after":  ["$"]
            // },

            // since Ctrl+r was to select VS Code project ; also t and u seemed more ergonomic
            // t and u -----> undo and redo [AWESOME]
            {
                "before":["t"],
                "after":  ["C-r"]
            },

            // absolutely GENIUS ; you get the scrolling feeling in vim
            // use JK with :set scrolloff=15 ( or :set so=15 ) ; 
            // while scrolling your cursor will be on the 15th line from the top
            // another useful motion => H M L go to Highest line in your screen, middle line, last line

            // coupled with `Smooth scrolling enabled` it's really good 
            // marking important sections of the code using `leader+m`
            {
                "before":["J"],
                "after":  ["C-d"]
            },
            {
                "before":["K"],
                "after":  ["C-u"]
            },

           // boomark extension will be envoked via space (leader) 
            {
                "before": ["<leader>", "m"],
                "commands": [
                    "bookmarks.toggle"
                ]
            },
            {
                "before": ["<leader>", "b"],
                "commands": [
                    "bookmarks.list"
                ]
            },
            {
                "before": ["<leader>", "j"],
                "commands": [
                    "bookmarks.jumpToNext"
                ]
            },
            {
                "before": ["<leader>", "k"],
                "commands": [
                    "bookmarks.jumpToPrevious"
                ]
            },
            {
                "before": ["<leader>", "l"],
                "commands": [
                    "bookmarks.listFromAllFiles"
                ]
            },

            // File Explorer Vim is insane
            /*
                    a - New file
                    f - New folder
                    r - Rename item
                    x - Cut item
                    y - Copy item
                    p - Paste item
            */
            {
                "before": ["<leader>", "e"],
                "commands": ["workbench.view.explorer"]
            },
    
          
    
            // THis is INSANE
            {
                "before": ["g", "h"],
                "commands": [
                    "editor.action.showDefinitionPreviewHover"
                ]
            },
            {
                "before": ["H"], // Focus previous tab at the left
                "commands": ["workbench.action.previousEditor"]
            },
            {
                "before": ["L"], // Focus next tab at the right
                "commands": ["workbench.action.nextEditor"]
            },

    ],

    "vim.useCtrlKeys": true,
      "vim.handleKeys": {
      "<C-a>": true,
      // Imma try navigating using C-d and C-u even if that seems really wierd
      "<C-d>": true,
      
      "<C-b>": false,
      "<C-f>": false,
      "<C-r>": false,
      "<C-h>": false,
      "<C-l>": false,
      "<C-w>": false,
      "<C-p>": false,
      
      // control + space is HOW TO ENVOKE INTELLISENSE suggestion while in the middle of the word
      "<C-space>": false
    },
  
    // persists the foldings 
    "editor.foldingStrategy": "auto",
    "editor.scrollbar.vertical": "visible",
  

    // how to display .git folder [ YOU CAN ADD USEFULL PRE-PUSH scripts to run in HOOKS ]
    "files.exclude": {
        "**/.git": false,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
    },
    "workbench.iconTheme": "material-icon-theme",
    "explorer.confirmDragAndDrop": false,
    "workbench.productIconTheme": "fluent-icons",
    "editor.wordWrap": "on",
    "explorer.confirmDelete": false,
    "workbench.sideBar.location": "right",
    "workbench.activityBar.location": "hidden",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.smoothScrolling": true,
    "workbench.list.smoothScrolling": true,
    "editor.cursorBlinking": "phase",
    "errorLens.codeLensEnabled": true,
    "editor.minimap.enabled": false,
  
  }
  